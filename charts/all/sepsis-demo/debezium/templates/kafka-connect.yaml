apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ .Values.kafka.connect }}
  namespace: {{ .Values.project_name }}
  annotations:
    strimzi.io/use-connector-resources: 'true'
spec:
  build:
    output: 
      type: imagestream
      image: debezium-postgres-connect:latest
    plugins: 
      - name: debezium-connector-postgres
        artifacts:
          - type: zip
            url: https://maven.repository.redhat.com/ga/io/debezium/debezium-connector-postgres/1.9.5.Final-redhat-00001/debezium-connector-postgres-1.9.5.Final-redhat-00001-plugin.zip
          - type: zip
            url: https://maven.repository.redhat.com/ga/io/apicurio/apicurio-registry-distro-connect-converter/2.0.3.Final-redhat-00002/apicurio-registry-distro-connect-converter-2.0.3.Final-redhat-00002.zip
          - type: zip
            url: https://maven.repository.redhat.com/ga/io/debezium/debezium-scripting/1.9.5.Final/debezium-scripting-1.9.5.Final.zip
          - type: jar
            url: https://repo1.maven.org/maven2/org/codehaus/groovy/groovy/3.0.11/groovy-3.0.11.jar
          - type: jar
            url: https://repo1.maven.org/maven2/org/codehaus/groovy/groovy-jsr223/3.0.11/groovy-jsr223-3.0.11.jar
          - type: jar
            url: https://repo1.maven.org/maven2/org/codehaus/groovy/groovy-json3.0.11/groovy-json-3.0.11.jar
  version: {{ .Values.kafka_connect.version }}
  replicas: {{ .Values.kafka_connect.replicas }}
  bootstrapServers: {{ printf "kafka-cluster-kafka-bootstrap.%s.svc:%s" .Values.project_name  .Values.kafka.bootstrap_port}}
  config:
    group.id: {{ .Values.kafka.connect }}
    offset.storage.topic: {{ printf "%s-offsets"  .Values.kafka.connect }}
    config.storage.topic: {{ printf "%s-configs"  .Values.kafka.connect }}
    status.storage.topic: {{ printf "%s-status"  .Values.kafka.connect }}
    key.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false
    config.storage.replication.factor: 2
    offset.storage.replication.factor: 2
    status.storage.replication.factor: 1
    topic.creation.enable: "false"
    topic.creation.default.replication.factor: 3
    topic.creation.default.partitions: 1
    topic.creation.default.cleanup.policy: compact
  resources:
    requests:
      cpu: '{{ .Values.kafka_connect.requests.cpu }}'
      memory: '{{ .Values.kafka_connect.requests.memory }}'
    limits:
      cpu: '{{ .Values.kafka_connect.limits.cpu }}'
      memory: '{{ .Values.kafka_connect.limits.memory }}'
  livenessProbe:
    initialDelaySeconds: {{ .Values.kafka_connect.liveness_probe.initial_delay_seconds }}
    timeoutSeconds: {{ .Values.kafka_connect.liveness_probe.timeout_seconds }}
  readinessProbe:
    initialDelaySeconds: {{ .Values.kafka_connect.readiness_probe.initial_delay_seconds }}
    timeoutSeconds: {{ .Values.kafka_connect.readiness_probe.timeout_seconds }}
  jvmOptions:
    gcLoggingEnabled: false
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: {{ printf "%s-metrics" .Values.kafka.connect }}
        key: metrics-config.yml